//ПРИМЕР ПЕРЕДАЧИ ЗНАЧЕНИЯ ПО ССЫЛКЕ
const obj = {        //Создаём объект
    a: 5,
    b: 1
};
const copy = obj;   //Переменной присваевается ссылка на содержимое объекта
copy.a = 10;        //Изменяя её, меняется и исходный объект
console.log(copy);
console.log(obj);

//___________________________________________________________________________________________________________________
//СОЗДАНИЕ ПОВЕРХНОСТНОЙ КОПИИ ОБЪЕКТА (ВЛОЖЕННЫЕ ОБЪЕКТЫ НЕ КОПИРУЮТСЯ)
function copy2(mainObj) {               //Создаём функцию
    let objCopy = {};                   //В ней - пустой объект
    let key;                            //Переменн. ключ-оператор
    for (key in mainObj) {              //Пока ключ в параметре функции...
        objCopy[key] = mainObj[key];    //Объекту-копии присваивается содержимое объекта-оригинала (параметра функции)
    }
    return objCopy;                     //Функция возвращает объект-копию

}
const numbers = {                       //Для примера создаём объект со вложенными подобъектами
    a: 2,
    b: 5,
    c: {
        x: 7,
        y: 4
    }
};
const newNumbers = copy2(numbers);      //И второй объект, в который ходим скопировать содержимое первого
newNumbers.a = 10;                      //Пытаемся изменить содержимое копии
console.log(copy2(newNumbers));         //И видим, что оно изменилось
console.log(copy2(numbers));            //оригинал при этом сохранён

//___________________________________________________________________________________________________________________
//СПОСОБ ОБЪЕДИНЕНИЯ ОБЪЕКТОВ
const add = {                               //Создаём ещё один объект
    d: 17,
    e: 20
};
console.log(Object.assign(numbers, add));   //Выводим в консоль результат объединения с помощью оператора Object.assign

//____________________________________________________________________________________________________________________
//СОЗДАНИЕ ПОВЕРХНОСТНОЙ КОПИИ ОБЪЕКТА (СПОСОБ 2, БОЛЕЕ КРАТКИЙ)
const add2 = {                                  //Объект - оригинал
    d: 17,
    e: 20
};
const clone = Object.assign({}, add2);  //Объект клон = объединение пустого объекта с оригиналом
clone.d = 10;                                 //Меняем содержимое копии
console.log(clone);
console.log(add2);

//____________________________________________________________________________________________________________________
//СПОСОБ КОПИРОВАНИЯ МАССИВА
const oldArray = ['a', 'b', 'c'];
const newArray = oldArray.slice();
newArray[0] = 'AAAA';
console.log(newArray);
console.log(oldArray);

//____________________________________________________________________________________________________________________
//SPREAD-ОПЕРАТОР (ES9)
const video = ['youtube', 'vimeo', 'rutube'],
    blogs = ['wordpress', 'livejournal', 'blogger'],
    internet = [...video, ...blogs, 'vk', 'facebook'];
console.log(internet);

//____________________________________________________________________________________________________________________
//ПЕРЕДАЧА МАССИВА В КАЧЕСТВЕ АРГУМЕНТОВ ФУНКЦИИ
function  log(a, b, c) {
    console.log(a);
    console.log(b);
    console.log(c);
}
const num = [2, 5, 7];
log(...num);            //Spread-оператор разбивает массив на отдельные элементы

//____________________________________________________________________________________________________________________
//2 СПОСОБ КОПИРОВАНИЯ МАССИВА
const array = ['a', 'b'];
const newAarray = [...array];
console.log(newAarray);

//--------------------------------------------------------------------------------------------------------------------
//И ОБЪЕКТА
const q = {
    one: 1,
    two: 2
};
const newObj = {...q};
console.log(newObj);
