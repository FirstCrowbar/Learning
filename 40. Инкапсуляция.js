//Инкапсуляция - это упаковка данных и функций в один компонент (например, класс) и последующий контроль доступа к этому компоненту,
// создавая тем самым "чёрный ящик" из объекта. По этой причине, пользователю необходимо знать только интерфейс этого класса
// (то есть данные и функции, предоставляемые для взаимодействия с классом извне), а не то, как он реализован внутри.

class User {
    constructor(name, age) {
        this.name = name;
        this._age = age; //нижним подчёркиванием обозначается недоступность извне
    }
    say() {
        console.log(`Имя пользователя: ${this.name}, возраст: ${this._age}`);
    }
    //Создаём геттер, чтобы получать переменную возраста
    get age() {
        return this._age;
    }
    //Создаём сеттер для возможности изменения возраста
    set age(age) {
        if (typeof age === 'number' && age > 0 && age < 110) {
            this._age = age;
        } else {
            console.log('Недопустимое значение');
        }
    }
}

const ivan = new User('Ivan', 27);
console.log(ivan.age); //Используется гетер
ivan.age = 99; //Используется сетер
console.log(ivan.age); //Используется гетер
ivan.say();